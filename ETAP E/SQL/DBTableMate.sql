/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 14.1 		*/
/*  Created On : 28-mar-2025 21:58:06 				*/
/*  DBMS       : SQLite 								*/
/* ---------------------------------------------------- */

/* Drop Views */

DROP VIEW IF EXISTS 'VIEW_A'
;

/* Drop Tables */

DROP TABLE IF EXISTS 'Administrator'
;

DROP TABLE IF EXISTS 'BazaSprzêtuIt'
;

DROP TABLE IF EXISTS 'Biurko'
;

DROP TABLE IF EXISTS 'Dostawa'
;

DROP TABLE IF EXISTS 'DostêpnoœæZasobu'
;

DROP TABLE IF EXISTS 'HistoriaZamówieñ'
;

DROP TABLE IF EXISTS 'ListaU¿ytkowników'
;

DROP TABLE IF EXISTS 'Menu'
;

DROP TABLE IF EXISTS 'MiejsceParkingowe'
;

DROP TABLE IF EXISTS 'Posi³ek'
;

DROP TABLE IF EXISTS 'Powiadomienie'
;

DROP TABLE IF EXISTS 'Raport'
;

DROP TABLE IF EXISTS 'RaportRezerwacji'
;

DROP TABLE IF EXISTS 'RaportZamówieñ'
;

DROP TABLE IF EXISTS 'Rezerwacja'
;

DROP TABLE IF EXISTS 'RezerwacjeU¿ytkowników'
;

DROP TABLE IF EXISTS 'SalaKonferencyjna'
;

DROP TABLE IF EXISTS 'SprzêtIt'
;

DROP TABLE IF EXISTS 'Uzytkownik'
;

DROP TABLE IF EXISTS 'Zamówienie'
;

DROP TABLE IF EXISTS 'Zasob'
;

/* Create Tables with Primary and Foreign Keys, Check and Unique Constraints */

	-- U¿ytkownik systemu o roli administratora
CREATE TABLE 'Administrator'
(
	'Rola' varchar NULL,
	'AdministratorID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	'ListaU¿ytkownikówID' INTEGER NOT NULL,
	CONSTRAINT 'FK_Administrator_zarz¹dza' FOREIGN KEY ('ListaU¿ytkownikówID') REFERENCES 'ListaU¿ytkowników' ('ListaU¿ytkownikówID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Lista dostêpnych urz¹dzeñ
CREATE TABLE 'BazaSprzêtuIt'
(
	'Identyfikator' varchar NULL,
	'BazaSprzêtuItID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	'SprzêtItID' INTEGER NULL,
	CONSTRAINT 'FK_BazaSprzêtuIt_SprzêtIt' FOREIGN KEY ('SprzêtItID') REFERENCES 'SprzêtIt' ('SprzêtItID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Stanowisko pracy
CREATE TABLE 'Biurko'
(
	'Numer' varchar NULL,
	'BiurkoID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	CONSTRAINT 'FK_Biurko_Zasob' FOREIGN KEY ('BiurkoID') REFERENCES 'Zasob' ('ZasobID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Szczegó³y dostawy zamówienia
CREATE TABLE 'Dostawa'
(
	'Identyfikator' varchar NULL,
	'Stanowisko' varchar NULL,
	'DostawaID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT
)
;

	-- Dostêpnoœæ zasobu w danym czasie
CREATE TABLE 'DostêpnoœæZasobu'
(
	'Czas' varchar NULL,
	'Data' varchar NULL,
	'Dostêpnoœæ' varchar NULL,
	'DostêpnoœæZasobuID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	'UzytkownikID' INTEGER NULL,
	CONSTRAINT 'FK_Dostêpnoœæ zasobu_sprawdza' FOREIGN KEY ('UzytkownikID') REFERENCES 'Uzytkownik' ('UzytkownikID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Historia zamówieñ zalogowanego u¿ytkownika
CREATE TABLE 'HistoriaZamówieñ'
(
	'Identyfikator' varchar NULL,
	'HistoriaZamówieñID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	'UzytkownikID' INTEGER NULL,
	CONSTRAINT 'FK_Historia zamówieñ_przegl¹da' FOREIGN KEY ('UzytkownikID') REFERENCES 'Uzytkownik' ('UzytkownikID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Lista u¿ytkowników systemu
CREATE TABLE 'ListaU¿ytkowników'
(
	'Identyfikator' varchar NULL,
	'ListaU¿ytkownikówID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT
)
;

	-- Lista pozycji w menu
CREATE TABLE 'Menu'
(
	'Identyfikator' varchar NULL,
	'MenuID' INTEGER NOT NULL PRIMARY KEY
)
;

	-- Miejsce parkingowe
CREATE TABLE 'MiejsceParkingowe'
(
	'Po³o¿enie' varchar NULL,
	'MiejsceParkingoweID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	CONSTRAINT 'FK_Miejsce parkingowe_Zasob' FOREIGN KEY ('MiejsceParkingoweID') REFERENCES 'Zasob' ('ZasobID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Pozycja w menu
CREATE TABLE 'Posi³ek'
(
	'Identyfikator' varchar NULL,
	'Nazwa' varchar NULL,
	'Opis' varchar NULL,
	'Posi³ekID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	'MenuID' INTEGER NULL,
	CONSTRAINT 'FK_Posi³ek_zawiera' FOREIGN KEY ('MenuID') REFERENCES 'Menu' ('MenuID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Powiadomienie o rezerwacji
CREATE TABLE 'Powiadomienie'
(
	'Identyfikator' varchar NULL,
	'Odbiorca' varchar NULL,
	'Treœæ' varchar NULL,
	'Tytu³' varchar NULL,
	'PowiadomienieID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	'UzytkownikID' INTEGER NULL,
	CONSTRAINT 'FK_Powiadomienie_otrzymuje' FOREIGN KEY ('UzytkownikID') REFERENCES 'Uzytkownik' ('UzytkownikID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Raport systemu TableMate
CREATE TABLE 'Raport'
(
	'Identyfikator' varchar NULL,
	'RaportID' varchar NOT NULL PRIMARY KEY,
	'AdministratorID' INTEGER NULL,
	CONSTRAINT 'FK_Raport_generuje' FOREIGN KEY ('AdministratorID') REFERENCES 'Administrator' ('AdministratorID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Raport z list¹ rezerwacji
CREATE TABLE 'RaportRezerwacji'
(
	'Rezerwacja' varchar NULL,
	'RaportRezerwacjiID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	CONSTRAINT 'FK_Raport rezerwacji_Raport' FOREIGN KEY ('RaportRezerwacjiID') REFERENCES 'Raport' ('RaportID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Raport z list¹ zamówieñ
CREATE TABLE 'RaportZamówieñ'
(
	'RaportZamówieñID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	CONSTRAINT 'FK_Raport zamówieñ_Raport' FOREIGN KEY ('RaportZamówieñID') REFERENCES 'Raport' ('RaportID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Rezerwacja u¿ytkownika
CREATE TABLE 'Rezerwacja'
(
	'Identyfiaktor' varchar NULL,
	'Zasób' varchar NULL,
	'RezerwacjaID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	'RezerwacjeU¿ytkownikówID' INTEGER NULL,
	'ZasobID' INTEGER NULL,
	CONSTRAINT 'FK_Rezerwacja_zawiera' FOREIGN KEY ('RezerwacjeU¿ytkownikówID') REFERENCES 'RezerwacjeU¿ytkowników' ('RezerwacjeU¿ytkownikówID') ON DELETE No Action ON UPDATE No Action,
	CONSTRAINT 'FK_Rezerwacja_rezerwuje' FOREIGN KEY ('ZasobID') REFERENCES 'Zasob' ('ZasobID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Lista rezerwacji u¿ytkowników
CREATE TABLE 'RezerwacjeU¿ytkowników'
(
	'Identyfikator' varchar NULL,
	'RezerwacjeU¿ytkownikówID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT
)
;

	-- Sala konferencyjna
CREATE TABLE 'SalaKonferencyjna'
(
	'Nazwa' varchar NULL,
	'SalaKonferencyjnaID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	CONSTRAINT 'FK_Sala konferencyjna_Zasob' FOREIGN KEY ('SalaKonferencyjnaID') REFERENCES 'Zasob' ('ZasobID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Sprzêt IT
CREATE TABLE 'SprzêtIt'
(
	'Identyfikator' varchar NULL,
	'Nazwa' varchar NULL,
	'Typ' varchar NULL,
	'SprzêtItID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT
)
;

	-- U¿ytkownik systemu TableMate
CREATE TABLE 'Uzytkownik'
(
	'Identyfiktor' varchar NULL,
	'Imiê' varchar NULL,
	'Nazwisko' varchar NULL,
	'UzytkownikID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	'ListaU¿ytkownikówID' INTEGER NULL,
	'RezerwacjeU¿ytkownikówID' INTEGER NULL,
	CONSTRAINT 'FK_Uzytkownik_zawiera' FOREIGN KEY ('ListaU¿ytkownikówID') REFERENCES 'ListaU¿ytkowników' ('ListaU¿ytkownikówID') ON DELETE No Action ON UPDATE No Action,
	CONSTRAINT 'FK_Uzytkownik_modyfikuje' FOREIGN KEY ('RezerwacjeU¿ytkownikówID') REFERENCES 'RezerwacjeU¿ytkowników' ('RezerwacjeU¿ytkownikówID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Zamówienie u¿ytkownika w systemie TableMate
CREATE TABLE 'Zamówienie'
(
	'Data' varchar NULL,
	'Dostawa' varchar NULL,
	'Identyfikator' varchar NULL,
	'Posi³ek' varchar NULL,
	'Sprzêt' varchar NULL,
	'ZamówienieID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	'DostawaID' INTEGER NOT NULL,
	'HistoriaZamówieñID' INTEGER NULL,
	'Posi³ekID' INTEGER NULL,
	'SprzêtItID' INTEGER NULL,
	CONSTRAINT 'FK_Zamówienie_posiada' FOREIGN KEY ('DostawaID') REFERENCES 'Dostawa' ('DostawaID') ON DELETE No Action ON UPDATE No Action,
	CONSTRAINT 'FK_Zamówienie_zawiera' FOREIGN KEY ('HistoriaZamówieñID') REFERENCES 'HistoriaZamówieñ' ('HistoriaZamówieñID') ON DELETE No Action ON UPDATE No Action,
	CONSTRAINT 'FK_Zamówienie_Posi³ek' FOREIGN KEY ('Posi³ekID') REFERENCES 'Posi³ek' ('Posi³ekID') ON DELETE No Action ON UPDATE No Action,
	CONSTRAINT 'FK_Zamówienie_SprzêtIt' FOREIGN KEY ('SprzêtItID') REFERENCES 'SprzêtIt' ('SprzêtItID') ON DELETE No Action ON UPDATE No Action
)
;

	-- Zasób firmy
CREATE TABLE 'Zasob'
(
	'Identyfikator' varchar NULL,
	'ZasobID' INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT
)
;

/* Create Views */

CREATE VIEW 'VIEW_A' AS 
/* SQL statements defining VIEW_A */
;

